#!/bin/bash
node_prefix="NONE"
max_nodes="NONE"
threshold="NONE"
PING_COUNT=1
NO_REPLIES=0
TRACKER_FILE=/var/tmp/$0_tracker_$$.txt

usage()
{
	echo "Check that a series of servers with common hostname"
	echo "such as comp1 comp2 comp3 etc are online and set a"
	echo "threshold value to alarm if crossed."
	echo "$0 -n prefix -t threhold -m max-servers"
	echo "Example:"
	echo "  $0 -n hpcsrv -m 8 -t 4"
}

usage_exit_error()
{
	echo $1
	usage
	exit 1
}

while [ "$#" -gt "0" ]
do
  opt="${1//-}"
  opt="${1//-}"
  opt=$(echo "${opt}" | cut -c 1 2>/dev/null)
  case $opt in
    n) shift; node_prefix=$1;;
    t) shift; threshold=$1;; 
    m) shift; max_nodes=$1;; # MANDATORY 
    u) usage ; exit 0;;
    *) usage; exit 1;;
  esac
  shift
done

[ ${node_prefix} = "NONE" ] && usage_exit_error "No prefix given"
[ ${max_nodes} = "NONE" ]   && usage_exit_error "No max nodes"
[ ${threshold} = "NONE" ]   && usage_exit_error "No threshold"

if [ ! $threshold ]; then
	echo "Error: Max given" && exit 255
fi

# ping each node and see if it replied
for i in `seq 1 $max_nodes`;
do
	ping -c $PING_COUNT $node_prefix$i
	if [ $? -gt 0 ]; then
		let NO_REPLIES=NO_REPLIES+1
		echo -n "$node_prefix$i " >> $TRACKER_FILE
	fi
done

# if the number of nodes is over threshold, alarm critical
if [ $NO_REPLIES -gt $threshold ]; then
	nodelist=`cat $TRACKER_FILE`
	rm -f $TRACKER_FILE
	echo "$0 $node_prefix CRITICAL: Servers not replying to ping $nodelist" 
	exit 2
fi

rm -f $TRACKER_FILE
echo "$0 $node_prefix: OKAY" && exit 0
